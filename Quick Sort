#include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int array[], int lb, int ub) {
    int pivot = array[lb], start = lb, end = ub;
    while (start < end) {
        while (array[start] <= pivot)
            start++;
        while (array[end] > pivot)
            end--;
        if (start < end)
            swap(&array[start], &array[end]);
    }
    swap(&array[lb], &array[end]);
    return end;
}

void quickSort(int array[], int lb, int ub) {
    if (lb < ub) {
        int loc = partition(array, lb, ub);
        quickSort(array, lb, loc - 1);
        quickSort(array, loc + 1, ub);
    }
}

int main() {
    int n;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[100];
    printf("Enter the elements: \n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Before Quick Sort:\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }

    quickSort(arr, 0, n - 1);

    printf("\nAfter Quick Sort:\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }

    return 0;
}
